pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "nodeimg"
        DOCKER_TAG = "latest"
        CONTAINER_NAME = "node-app"
        PORT = "4000"
    }

    stages {
        stage('Clone Repository') {
            steps {
                echo 'Cloning Repository...'
               // git 'https://github.com/your-repo-url.git'  // Replace with your repo
            }
        }

        stage('Install Dependencies') {
            steps {
                script {
                    sh 'npm install'
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    sh 'npm test || echo "No tests defined"'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh "docker build -t $DOCKER_IMAGE ."
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'dockerhubcred', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh "docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD"
                        sh "docker tag nodeimg sujatap12/nodeimg:latest"
                        sh "docker push sujatap12/nodeimg:latest"
                    }
                }
            }
        }

        stage('Deploy Container') {
            steps {
                script {
                    sh """
                        docker stop $CONTAINER_NAME || true
                        docker rm $CONTAINER_NAME || true
                        docker run -d --name $CONTAINER_NAME -p $PORT:$PORT $DOCKER_IMAGE
                    """
                }
            }
        }
    }

    post {
        success {
            echo 'Deployment Successful!'
        }
        failure {
            echo 'Build Failed!'
        }
    }
}
